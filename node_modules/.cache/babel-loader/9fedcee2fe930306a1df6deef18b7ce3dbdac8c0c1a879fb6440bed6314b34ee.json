{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\MERN Stack\\\\Food Delivery App\\\\mernapp\\\\src\\\\screens\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [credentials, setcredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    geolocation: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/api/createuser\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: credentials.name,\n        email: credentials.email,\n        password: credentials.password,\n        location: credentials.geolocation\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    if (!json.success) {\n      alert(\"Enter valid credentials\");\n    }\n  };\n  const onChange = event => {\n    setcredentials({\n      ...credentials,\n      [event.target.name]: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"lq2yezwLrIMrKDHVHM01jAVuAPM=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","credentials","setcredentials","name","email","password","geolocation","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","location","json","console","log","success","alert","onChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/MERN Stack/Food Delivery App/mernapp/src/screens/Login.js"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function Login() {\r\n  \r\n  const [credentials, setcredentials] = useState({ name: \"\", email: \"\", password: \"\", geolocation: \"\" })\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"http://localhost:5000/api/createuser\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name: credentials.name, email: credentials.email, password: credentials.password, location: credentials.geolocation })\r\n    })\r\n\r\n    const json = await response.json()\r\n    console.log(json);\r\n\r\n    if (!json.success) {\r\n      alert(\"Enter valid credentials\")\r\n    }\r\n  }\r\n\r\n  const onChange = (event) => {\r\n    setcredentials({ ...credentials, [event.target.name]: event.target.value })\r\n  }\r\n  \r\n  return (\r\n    <div>Login</div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAAEO,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAEtG,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,IAAI,EAAEF,WAAW,CAACE,IAAI;QAAEC,KAAK,EAAEH,WAAW,CAACG,KAAK;QAAEC,QAAQ,EAAEJ,WAAW,CAACI,QAAQ;QAAEY,QAAQ,EAAEhB,WAAW,CAACK;MAAY,CAAC;IAC9I,CAAC,CAAC;IAEF,MAAMY,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjB,IAAI,CAACA,IAAI,CAACG,OAAO,EAAE;MACjBC,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1BtB,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACuB,KAAK,CAACC,MAAM,CAACtB,IAAI,GAAGqB,KAAK,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC7E,CAAC;EAED,oBACE5B,OAAA;IAAA6B,QAAA,EAAK;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEpB;AAAC/B,EAAA,CA7BuBD,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}